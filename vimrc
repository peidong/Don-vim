"""""""""""""""""""""""""""""""""""""""""""""
"                                           "
" Neobundle 11/16/2015 added by Peidong     "
"                                           "
"""""""""""""""""""""""""""""""""""""""""""""
" Note: Skip initialization for vim-tiny or vim-small.
if 0 | endif

if has('vim_starting')
    if &compatible
        set nocompatible               " Be iMproved
    endif

    " Required:
    set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles here:

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Base Plugins                                 "
"             11/29/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

"Interactive command execution in Vim.
NeoBundle 'Shougo/vimproc.vim', {
            \ 'build' : {
            \     'windows' : 'tools\\update-dll-mingw',
            \     'cygwin' : 'make -f make_cygwin.mak',
            \     'mac' : 'make',
            \     'linux' : 'make',
            \     'unix' : 'gmake',
            \    },
            \ }

"Use shell inside vim, usage: :VimShell<CR>
NeoBundle 'Shougo/vimshell.vim'

"This plugin can do various things, but I only use this as a base plugin for
"Shougo's plugins
NeoBundle 'Shougo/unite.vim'

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Important Plugins                            "
"             11/29/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

"Comment code in files, usage: gcc
NeoBundle 'tomtom/tcomment_vim'

"Align codes, usage: gaiw
NeoBundle 'junegunn/vim-easy-align'

"Check the syntastic of codes, need to install engines in PATH
NeoBundle 'scrooloose/syntastic'

"Edit code with multi-cursors, usage: <C-n> next, <C-p> previous, <C-x>
"ignore, v Normal Mode, c Change Word
NeoBundle 'terryma/vim-multiple-cursors'

"Vim status line
NeoBundle 'vim-airline/vim-airline'
NeoBundle 'vim-airline/vim-airline-themes'

"Show the indent lines
NeoBundle 'Yggdroot/indentLine'

"Show the file list, usage: :NERDTreeToggle<CR>
NeoBundle 'scrooloose/nerdtree'

"Embedded with NERDTree
NeoBundle 'Xuyuanp/nerdtree-git-plugin'

"Show the undo history, usage: :UndotreeToggle<CR>
NeoBundle 'mbbill/undotree'

"Fast move cursors, usage: <Leader><Leader>j/k/f/t/F/T
NeoBundle 'easymotion/vim-easymotion'

"Fast add/delete/change surroundings, usage: csiw/ysiw/dsiw
NeoBundle 'tpope/vim-surround'

"Show git status in the left column
NeoBundle 'airblade/vim-gitgutter'

"Do git commands inside vim, usage: :Gdiff, :Gpush, :Gpull
NeoBundle 'tpope/vim-fugitive'

"Show spaces in color red
NeoBundle 'ntpeters/vim-better-whitespace'

"Auto complete pairs
NeoBundle 'jiangmiao/auto-pairs'

"Auto complete tags like Html tags
NeoBundle 'docunext/closetag.vim'

"Make repeat "." more smart
NeoBundle 'tpope/vim-repeat'

"Fast find more files, usage: <C-p>
NeoBundle 'kien/ctrlp.vim'

"Many colorschemes, but not recommend, because some of them are not up-to-date
"NeoBundle 'flazz/vim-colorschemes'

"PaperColor theme, is better for light colorscheme, also you can use it for
"dark colorscheme
NeoBundle 'NLKNguyen/papercolor-theme'

"Fast select blocks, usage: <Enter>, <Backspace>
NeoBundle 'gcmt/wildfire.vim'

"Make pairs colorful
NeoBundle 'luochen1990/rainbow'

"Make the copy function more smart, usage: when finish pasting, <Leader>p,
"<Leader>n
NeoBundle 'vim-scripts/YankRing.vim'

"Change between files in buffer, usage <C-Space>
NeoBundle 'szw/vim-ctrlspace'

"Make vim's diff more powerful, usage: vimdiff, vim -d
NeoBundle 'chrisbra/vim-diff-enhanced'

"Use it in HTML codes for example, usage: <C-y>,
NeoBundle 'mattn/emmet-vim'

"Better folding in Python code
NeoBundle 'tmhedberg/SimpylFold'

"More powerful show tags generated by ctags, usage: :TagbarToggle<CR>
NeoBundle 'majutsushi/tagbar'

"Useful in C code when we want to jump,
"usage: :call CscopeFindInteractive(expand('<cword>'))<CR>
NeoBundle 'brookhong/cscope.vim'

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Lazy                                         "
"             11/29/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

"Use in Mac OSX's Dash app
" NeoBundleLazy 'rizzatti/dash.vim'

"Code templates
" NeoBundleLazy 'honza/vim-snippets'

"Markdown highlight
NeoBundle 'tpope/vim-markdown'

"Json highlight
NeoBundle 'elzr/vim-json'

"Matlab highlight
NeoBundle 'vim-scripts/MatlabFilesEdition'

"Javascript highlight
NeoBundle 'pangloss/vim-javascript'

"PHP highlight
NeoBundle 'StanAngeloff/php.vim'

"Improved PHP omni-completion
NeoBundle 'shawncplus/phpcomplete.vim'

"Latex preview
NeoBundle 'xuhdev/vim-latex-live-preview'

"Latex edit
NeoBundle 'lervag/vimtex'

"Python highlight
NeoBundle 'hdima/python-syntax'

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Other plugins                                "
"             11/29/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

"Auto complete engine
NeoBundle 'Valloric/YouCompleteMe'

"Fast find new words
NeoBundle 'dyng/ctrlsf.vim'

"There are bugs in this plugin
"NeoBundle 'SirVer/ultisnips'

"Preview the markdown file
NeoBundle 'MikeCoder/markdown-preview.vim'

" Refer to |:NeoBundle-examples|.
" Note: You don't set neobundle setting in .gvimrc!

call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

" Put your non-Plugin stuff after this line

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                              ""                                              "
" General settings 05/13/2015 added by Peidong "" General settings 05/13/2015 added by Peidong "
"                                              ""                                              "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" - font type and size setting.
if has('win32')
    set guifont=Consolas:h12   " Win32.
elseif has('gui_macvim')
    set guifont=Monaco:h12     " OSX.
else
    set guifont=Monospace\ 12  " Linux.
endif
set encoding=utf-8
"set number
set relativenumber
set smartindent
" 开启语法高亮功能
syntax enable
" 允许用指定语法高亮配色方案替换默认方案
syntax on
" 自适应不同语言的智能缩进
" filetype indent on
"filetype plugin indent on
" 将制表符扩展为空格
set expandtab
" 设置编辑时制表符占用空格数
set tabstop=4
" 设置格式化时制表符占用空格数
set shiftwidth=4
" 让 vim 把连续数量的空格视为一个制表符
set softtabstop=4
" 高亮显示当前行/列
set cursorline
"set cursorcolumn
" 高亮显示搜索结果
set hlsearch
" 总是显示状态栏
set laststatus=2
" 显示光标当前位置
set ruler
" 开启实时搜索功能
set incsearch
" 搜索时大小写不敏感
set ignorecase
" vim 自身命令行模式智能补全
set wildmenu
" 文件在Vim之外修改过，自动重新读入
set autoread
" 代码匹配
set showmatch
set matchtime=3
"https://github.com/svermeulen/vim-easyclip#clipboard-setting
"set clipboard=unnamed
"特殊符号显示
" set listchars:tab:>-,trail:-,eol:$,nbsp:%,extends:>,precedes:<
" set list

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" General Keyboard Mapping                     "
"             05/13/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

"inoremap jj <ESC><Right>
" 定义快捷键的前缀，即<Leader>
let mapleader="\<Space>"

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Code Foldering                               "
"             05/13/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

" 基于缩进或语法进行代码折叠
set foldmethod=indent
"set foldmethod=syntax
" 启动 vim 时关闭折叠代码
set nofoldenable

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" color            05/13/2015 added by Peidong "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

" let current_time_hour = strftime("%H")
" if current_time_hour < 18 && current_time_hour > 5
"     let rainbow_background="light"
" else
"     let rainbow_background="dark"
" endif

let current_time_second = strftime("%S")
if current_time_second % 2 == 1
    let rainbow_background="light"
else
    let rainbow_background="dark"
endif

" basic color settings
if $TERM == "xterm-256color"
    set t_Co=256
endif

if rainbow_background == "light"
    set background=light
    let g:airline_theme='sol'
elseif rainbow_background == "dark"
    set background=dark
    let g:airline_theme='dark'
endif

" NLKNguyen/papercolor-theme
colorscheme PaperColor

" desert
"colorscheme desert

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                              ""                                              "
" Vimscript plugin 11/18/2015 added by Peidong "" Vimscript plugin 11/18/2015 added by Peidong "
"                                              ""                                              "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin junegunn/vim-easy-align               "
"             01/11/2016 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin vim-airline/vim-airline               "
"             11/16/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline_left_sep=''
let g:airline_right_sep=''

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin scrooloose/nerdtree                   "
"             05/13/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

" 使用 NERDTree 插件查看工程文件。设置快捷键，速记：file list
nmap <Leader>bf :NERDTreeToggle<CR>
" 设置NERDTree子窗口宽度
let NERDTreeWinSize=32
" 设置NERDTree子窗口位置
let NERDTreeWinPos="left"
" 显示隐藏文件
let NERDTreeShowHidden=1
" NERDTree 子窗口中不显示冗余帮助信息
let NERDTreeMinimalUI=1
" 删除文件时自动删除文件对应 buffer
let NERDTreeAutoDeleteBuffer=1
let g:NERDTreeDirArrows = 1

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin brookhong/cscope.vim                  "
"             01/26/2016 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

nnoremap <leader>bc :call CscopeFindInteractive(expand('<cword>'))<CR>
nnoremap <leader>bl :call ToggleLocationList()<CR>
" " s: Find this C symbol
" nnoremap  <leader>cs :call CscopeFind('s', expand('<cword>'))<CR>
" " g: Find this definition
" nnoremap  <leader>cg :call CscopeFind('g', expand('<cword>'))<CR>
" " d: Find functions called by this function
" nnoremap  <leader>cd :call CscopeFind('d', expand('<cword>'))<CR>
" " c: Find functions calling this function
" nnoremap  <leader>cc :call CscopeFind('c', expand('<cword>'))<CR>
" " t: Find this text string
" nnoremap  <leader>ct :call CscopeFind('t', expand('<cword>'))<CR>
" " e: Find this egrep pattern
" nnoremap  <leader>ce :call CscopeFind('e', expand('<cword>'))<CR>
" " f: Find this file
" nnoremap  <leader>cf :call CscopeFind('f', expand('<cword>'))<CR>
" " i: Find files #including this file
" nnoremap  <leader>ci :call CscopeFind('i', expand('<cword>'))<CR>

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin majutsushi/tagbar                     "
"             01/26/2016 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

nmap <Leader>bt :TagbarToggle<CR>

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin mbbill/undotree                       "
"             11/16/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

if has("persistent_undo")
    set undodir=~/.undodir/
    set undofile
endif

"nnoremap <Leader>bu :UndotreeToggle<cr>

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin xuhdev/vim-latex-live-preview         "
"             05/19/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

if has("unix")
    let s:uname = system("uname")
    if s:uname == "Darwin\n"
        " Do Mac stuff here
        let g:livepreview_previewer = 'open -a Preview'
    else
        " Do Linux stuff here
        let g:livepreview_previewer = 'okular'
    endif
endif

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin lervag/vimtex                         "
"             05/19/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

" make it work with YouCompleteMe
if !exists('g:ycm_semantic_triggers')
    let g:ycm_semantic_triggers = {}
endif
let g:ycm_semantic_triggers.tex = [
            \ 're!\\[A-Za-z]*(ref|cite)[A-Za-z]*([^]]*])?{([^}]*, ?)*'
            \ ]
" This option controls whether to append a closing brace after a label or a citation has been completed.
let g:vimtex_complete_close_braces = 1

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin Xuyuanp/nerdtree-git-plugin           "
"             11/17/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

let g:NERDTreeIndicatorMapCustom = {
            \ "Modified"  : "✹",
            \ "Staged"    : "✚",
            \ "Untracked" : "✭",
            \ "Renamed"   : "➜",
            \ "Unmerged"  : "═",
            \ "Deleted"   : "✖",
            \ "Dirty"     : "✗",
            \ "Clean"     : "✔︎",
            \ "Unknown"   : "?"
            \ }

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin luochen1990/rainbow                   "
"             11/17/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

let g:rainbow_active = 1

let rainbow_ctermfgs_lightcolors = [2, 1, 0, 4]
let rainbow_ctermfgs_darkcolors = [9, 14, 11, 13, 10, 15]
let rainbow_guifgs_lightcolors = ['#008700', '#af005f', '#1c1c1c', '#0000af']
let rainbow_guifgs_darkcolors = ['#f2433d', '#0087d7', '#d7af00', '#d787ff', '#00d75f', '#d0d0d0']

if rainbow_background == "light"
    let g:rainbow_conf = {
                \   'guifgs': rainbow_guifgs_lightcolors,
                \   'ctermfgs': rainbow_ctermfgs_lightcolors
                \}
elseif rainbow_background == "dark"
    let g:rainbow_conf = {
                \   'guifgs': rainbow_guifgs_darkcolors,
                \   'ctermfgs': rainbow_ctermfgs_darkcolors
                \}
endif

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin vim-scripts/YankRing.vim              "
"             11/17/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

let g:yankring_replace_n_pkey = '<Leader>p'
let g:yankring_replace_n_nkey = '<Leader>n'

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin peidong/Vimacs                        "
"             11/19/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

"let g:VM_CmdHeightAdj = 0
"let g:VM_NormalMetaXRemap = 0

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin scrooloose/syntastic                  "
"             05/13/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

" Better :sign interface symbols
let g:syntastic_error_symbol = '✗✗'
let g:syntastic_style_error_symbol = '✠✠'
let g:syntastic_warning_symbol = '∆∆'
let g:syntastic_style_warning_symbol = '≈≈'
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_loc_list_height = 4

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin terryma/vim-multiple-cursors          "
"             07/14/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin vim-ctrlspace                         "
"             11/12/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

set hidden

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin Shougo/vimshell.vim                   "
"             11/20/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

if has("unix")
    let s:uname = system("uname")
    if s:uname == "Darwin\n"
        " Do Mac stuff here
        let g:vimshell_editor_command = $VIM_APP_DIR.'/MacVim.app/Contents/MacOS/Vim --servername=VIM --remote-tab-wait-silent'
    else
        " Do Linux stuff here
    endif
endif
if executable('zsh') && filereadable(expand('~/.zsh_history'))
    " Use zsh history in vimshell/history source.
    let g:unite_source_vimshell_external_history_path =
                \ expand('~/.zsh_history')
endif

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin Shougo/unite.vim                      "
"             11/21/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

let g:unite_source_history_yank_enable = 1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                              ""                                              "
" Other plugins    11/18/2015 added by Peidong "" Other plugins    11/18/2015 added by Peidong "
"                                              ""                                              "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" YCM Settings     05/13/2015 added by Peidong "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

" YCM 补全菜单配色
" 菜单
" highlight Pmenu ctermfg=2 ctermbg=3 guifg=#005f87 guibg=#EEE8D5
" 选中项
" highlight PmenuSel ctermfg=2 ctermbg=3 guifg=#AFD700 guibg=#106900
let g:ycm_disable_for_files_larger_than_kb = 0
" 补全功能在注释中同样有效
let g:ycm_complete_in_comments=1
" 允许 vim 加载 .ycm_extra_conf.py 文件，不再提示
let g:ycm_confirm_extra_conf=0
" 开启 YCM 标签补全引擎
let g:ycm_collect_identifiers_from_tags_files=1
" 引入 C++ 标准库tags
set tags+=/data/misc/software/misc./vim/stdcpp.tags
" YCM 集成 OmniCppComplete 补全引擎，设置其快捷键
" inoremap <leader>; <C-x><C-o>
" 补全内容不以分割子窗口形式出现，只显示补全列表
set completeopt-=preview
" 从第一个键入字符就开始罗列匹配项
let g:ycm_min_num_of_chars_for_completion=1
" 禁止缓存匹配项，每次都重新生成匹配项
let g:ycm_cache_omnifunc=1
" 语法关键字补全
let g:ycm_seed_identifiers_with_syntax=1
let g:ycm_filetype_blacklist = {}
nnoremap <leader>cjd :YcmCompleter GoToDeclaration<CR>
" 只能是 #include 或已打开的文件
nnoremap <leader>cje :YcmCompleter GoToDefinition<CR>
let g:ycm_error_symbol = '✗✗'
let g:ycm_warning_symbol = '∆∆'
"let g:ycm_show_diagnostics_ui = 0

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin dyng/ctrlsf.vim                       "
"             05/13/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

" 使用 ctrlsf.vim 插件在工程内全局查找光标所在关键字，设置快捷键。快捷键速记法：search in project
nnoremap <Leader>rt :CtrlSF<CR>

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin SirVer/ultisnips                      "
"             07/14/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""
" Trigger configuration. Do not use <tab> if you use
" https://github.com/Valloric/YouCompleteMe.
"let g:UltiSnipsExpandTrigger="<tab>"
"let g:UltiSnipsJumpForwardTrigger="<c-b>"
"let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
"let g:UltiSnipsEditSplit="vertical"

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin MikeCoder/markdown-preview.vim        "
"             11/07/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

map <leader>bm :MarkdownPreview GitHub<CR>

""""""""""""""""""""""""""""""""""""""""""""""""
"                                              "
" Plugin hdima/python-syntax                   "
"             11/22/2015 added by Peidong      "
"                                              "
""""""""""""""""""""""""""""""""""""""""""""""""

let python_highlight_all = 1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                              ""                                              "
" Other needs      11/18/2015 added by Peidong "" Other needs      11/18/2015 added by Peidong "
"                                              ""                                              "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
